<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0909.1159                               -->
<workbook include-phone-layouts='false' original-version='18.1' source-build='2023.2.2 (20232.23.0909.1159)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IncludePhoneLayoutsOptOut />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <SpatialFileLayer />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='EatingOutDashboard' path='/workbooks' revision='2.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='zomato_df_final_data' inline='true' name='federated.1c5p8bv0zwov901gcb7ql0gc1sax' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='zomato_df_final_data' name='textscan.033nblt0a0rydv1f8nejj00cu07h'>
            <connection class='textscan' directory='C:/Users/tejas/Downloads/DSTS/Assignment1/data/data' filename='zomato_df_final_data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='sydney' name='ogrdirect.14ksxaw1u3phfj14tofdl0j2opaf'>
            <connection class='ogrdirect' directory='C:/Users/tejas/Downloads/DSTS/Assignment1/data/data' filename='sydney.geojson' password='' server='' tablename='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='ogrdirect.14ksxaw1u3phfj14tofdl0j2opaf' name='sydney.geojson' table='[sydney.geojson]' type='table'>
          <columns>
            <column datatype='string' name='SSC_CODE' ordinal='0' />
            <column datatype='string' name='SSC_NAME' ordinal='1' />
            <column datatype='string' name='CONF_VALUE' ordinal='2' />
            <column datatype='real' name='SQKM' ordinal='3' />
            <column datatype='spatial' name='Geometry' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.033nblt0a0rydv1f8nejj00cu07h' name='zomato_df_final_data.csv' table='[zomato_df_final_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
              <column datatype='string' name='address' ordinal='0' />
              <column datatype='integer' name='cost' ordinal='1' />
              <column datatype='string' name='cuisine' ordinal='2' />
              <column datatype='real' name='lat' ordinal='3' />
              <column datatype='string' name='link' ordinal='4' />
              <column datatype='real' name='lng' ordinal='5' />
              <column datatype='string' name='phone' ordinal='6' />
              <column datatype='real' name='rating_number' ordinal='7' />
              <column datatype='string' name='rating_text' ordinal='8' />
              <column datatype='string' name='subzone' ordinal='9' />
              <column datatype='string' name='title' ordinal='10' />
              <column datatype='string' name='type' ordinal='11' />
              <column datatype='integer' name='votes' ordinal='12' />
              <column datatype='boolean' name='groupon' ordinal='13' />
              <column datatype='string' name='color' ordinal='14' />
              <column datatype='real' name='cost_2' ordinal='15' />
              <column datatype='string' name='cuisine_color' ordinal='16' />
            </columns>
          </relation>
          <relation connection='ogrdirect.14ksxaw1u3phfj14tofdl0j2opaf' name='sydney.geojson' table='[sydney.geojson]' type='table'>
            <columns>
              <column datatype='string' name='SSC_CODE' ordinal='0' />
              <column datatype='string' name='SSC_NAME' ordinal='1' />
              <column datatype='string' name='CONF_VALUE' ordinal='2' />
              <column datatype='real' name='SQKM' ordinal='3' />
              <column datatype='spatial' name='Geometry' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[zomato_df_final_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_AU&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[zomato_df_final_data.csv]</parent-name>
            <remote-alias>address</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cost]</local-name>
            <parent-name>[zomato_df_final_data.csv]</parent-name>
            <remote-alias>cost</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cuisine</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cuisine]</local-name>
            <parent-name>[zomato_df_final_data.csv]</parent-name>
            <remote-alias>cuisine</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[zomato_df_final_data.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>link</remote-name>
            <remote-type>129</remote-type>
            <local-name>[link]</local-name>
            <parent-name>[zomato_df_final_data.csv]</parent-name>
            <remote-alias>link</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lng</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lng]</local-name>
            <parent-name>[zomato_df_final_data.csv]</parent-name>
            <remote-alias>lng</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>phone</remote-name>
            <remote-type>129</remote-type>
            <local-name>[phone]</local-name>
            <parent-name>[zomato_df_final_data.csv]</parent-name>
            <remote-alias>phone</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating_number</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rating_number]</local-name>
            <parent-name>[zomato_df_final_data.csv]</parent-name>
            <remote-alias>rating_number</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating_text</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rating_text]</local-name>
            <parent-name>[zomato_df_final_data.csv]</parent-name>
            <remote-alias>rating_text</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subzone</remote-name>
            <remote-type>129</remote-type>
            <local-name>[subzone]</local-name>
            <parent-name>[zomato_df_final_data.csv]</parent-name>
            <remote-alias>subzone</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[zomato_df_final_data.csv]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[zomato_df_final_data.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes]</local-name>
            <parent-name>[zomato_df_final_data.csv]</parent-name>
            <remote-alias>votes</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>groupon</remote-name>
            <remote-type>11</remote-type>
            <local-name>[groupon]</local-name>
            <parent-name>[zomato_df_final_data.csv]</parent-name>
            <remote-alias>groupon</remote-alias>
            <ordinal>13</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>color</remote-name>
            <remote-type>129</remote-type>
            <local-name>[color]</local-name>
            <parent-name>[zomato_df_final_data.csv]</parent-name>
            <remote-alias>color</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost_2]</local-name>
            <parent-name>[zomato_df_final_data.csv]</parent-name>
            <remote-alias>cost_2</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cuisine_color</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cuisine_color]</local-name>
            <parent-name>[zomato_df_final_data.csv]</parent-name>
            <remote-alias>cuisine_color</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SSC_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SSC_CODE]</local-name>
            <parent-name>[sydney.geojson]</parent-name>
            <remote-alias>SSC_CODE</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SSC_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SSC_NAME]</local-name>
            <parent-name>[sydney.geojson]</parent-name>
            <remote-alias>SSC_NAME</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONF_VALUE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONF_VALUE]</local-name>
            <parent-name>[sydney.geojson]</parent-name>
            <remote-alias>CONF_VALUE</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SQKM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SQKM]</local-name>
            <parent-name>[sydney.geojson]</parent-name>
            <remote-alias>SQKM</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[sydney.geojson]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>21</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Conf Value' datatype='string' name='[CONF_VALUE]' role='dimension' type='nominal' />
      <column aggregation='None' datatype='integer' name='[Cost (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[cost]' peg='0' size='32.2' />
      </column>
      <column caption='Sqkm' datatype='real' name='[SQKM]' role='measure' type='quantitative' />
      <column caption='Ssc Code' datatype='string' name='[SSC_CODE]' role='dimension' type='nominal' />
      <column caption='Ssc Name' datatype='string' name='[SSC_NAME]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='sydney.geojson' datatype='table' name='[__tableau_internal_object_id__].[sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='zomato_df_final_data.csv' datatype='table' name='[__tableau_internal_object_id__].[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]' role='measure' type='quantitative' />
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
      <column caption='Color' datatype='string' name='[color]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Cost' datatype='integer' name='[cost]' role='measure' type='quantitative' visual-totals='None' />
      <column caption='Cost 2' datatype='real' name='[cost_2]' role='measure' type='quantitative' />
      <column caption='Cuisine' datatype='string' name='[cuisine]' role='dimension' type='nominal' />
      <column caption='Cuisine Color' datatype='string' name='[cuisine_color]' role='dimension' type='nominal' />
      <column caption='Groupon' datatype='boolean' name='[groupon]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Link' datatype='string' name='[link]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Lng' datatype='real' name='[lng]' role='dimension' type='ordinal' />
      <column caption='Phone' datatype='string' name='[phone]' role='dimension' type='nominal' />
      <column caption='Rating Number' datatype='real' name='[rating_number]' role='dimension' type='ordinal' />
      <column caption='Rating Text' datatype='string' name='[rating_text]' role='dimension' type='nominal' />
      <column caption='Subzone' datatype='string' name='[subzone]' role='dimension' type='nominal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
      <column-instance column='[SSC_CODE]' derivation='None' name='[none:SSC_CODE:nk]' pivot='key' type='nominal' />
      <column-instance column='[rating_text]' derivation='None' name='[none:rating_text:nk]' pivot='key' type='nominal' />
      <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/tejas/OneDrive/Documents/My Tableau Repository/Datasources/zomato_df_final_data.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='09/28/2023 01:20:42 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8' table='[Extract].[sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9' table='[Extract].[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]' type='table' />
            <relation name='sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8' table='[Extract].[sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='zomato_df_final_data' increment-value='%null%' refresh-type='create' rows-inserted='10994' timestamp-start='2023-09-28 13:20:40.853' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>address</remote-name>
              <remote-type>129</remote-type>
              <local-name>[address]</local-name>
              <parent-name>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</parent-name>
              <remote-alias>address</remote-alias>
              <ordinal>0</ordinal>
              <family>zomato_df_final_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6281</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cost</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cost]</local-name>
              <parent-name>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</parent-name>
              <remote-alias>cost</remote-alias>
              <ordinal>1</ordinal>
              <family>zomato_df_final_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cuisine</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cuisine]</local-name>
              <parent-name>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</parent-name>
              <remote-alias>cuisine</remote-alias>
              <ordinal>2</ordinal>
              <family>zomato_df_final_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>827</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat]</local-name>
              <parent-name>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</parent-name>
              <remote-alias>lat</remote-alias>
              <ordinal>3</ordinal>
              <family>zomato_df_final_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3967</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>link</remote-name>
              <remote-type>129</remote-type>
              <local-name>[link]</local-name>
              <parent-name>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</parent-name>
              <remote-alias>link</remote-alias>
              <ordinal>4</ordinal>
              <family>zomato_df_final_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10500</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lng</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lng]</local-name>
              <parent-name>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</parent-name>
              <remote-alias>lng</remote-alias>
              <ordinal>5</ordinal>
              <family>zomato_df_final_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3967</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>phone</remote-name>
              <remote-type>129</remote-type>
              <local-name>[phone]</local-name>
              <parent-name>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</parent-name>
              <remote-alias>phone</remote-alias>
              <ordinal>6</ordinal>
              <family>zomato_df_final_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9289</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rating_number</remote-name>
              <remote-type>5</remote-type>
              <local-name>[rating_number]</local-name>
              <parent-name>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</parent-name>
              <remote-alias>rating_number</remote-alias>
              <ordinal>7</ordinal>
              <family>zomato_df_final_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rating_text</remote-name>
              <remote-type>129</remote-type>
              <local-name>[rating_text]</local-name>
              <parent-name>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</parent-name>
              <remote-alias>rating_text</remote-alias>
              <ordinal>8</ordinal>
              <family>zomato_df_final_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>subzone</remote-name>
              <remote-type>129</remote-type>
              <local-name>[subzone]</local-name>
              <parent-name>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</parent-name>
              <remote-alias>subzone</remote-alias>
              <ordinal>9</ordinal>
              <family>zomato_df_final_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>604</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[title]</local-name>
              <parent-name>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</parent-name>
              <remote-alias>title</remote-alias>
              <ordinal>10</ordinal>
              <family>zomato_df_final_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10500</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>11</ordinal>
              <family>zomato_df_final_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>60</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>votes</remote-name>
              <remote-type>20</remote-type>
              <local-name>[votes]</local-name>
              <parent-name>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</parent-name>
              <remote-alias>votes</remote-alias>
              <ordinal>12</ordinal>
              <family>zomato_df_final_data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>439</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>groupon</remote-name>
              <remote-type>11</remote-type>
              <local-name>[groupon]</local-name>
              <parent-name>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</parent-name>
              <remote-alias>groupon</remote-alias>
              <ordinal>13</ordinal>
              <family>zomato_df_final_data.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>color</remote-name>
              <remote-type>129</remote-type>
              <local-name>[color]</local-name>
              <parent-name>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</parent-name>
              <remote-alias>color</remote-alias>
              <ordinal>14</ordinal>
              <family>zomato_df_final_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cost_2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cost_2]</local-name>
              <parent-name>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</parent-name>
              <remote-alias>cost_2</remote-alias>
              <ordinal>15</ordinal>
              <family>zomato_df_final_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cuisine_color</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cuisine_color]</local-name>
              <parent-name>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</parent-name>
              <remote-alias>cuisine_color</remote-alias>
              <ordinal>16</ordinal>
              <family>zomato_df_final_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SSC_CODE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SSC_CODE]</local-name>
              <parent-name>[sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8]</parent-name>
              <remote-alias>SSC_CODE</remote-alias>
              <ordinal>17</ordinal>
              <family>sydney.geojson</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>494</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SSC_NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SSC_NAME]</local-name>
              <parent-name>[sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8]</parent-name>
              <remote-alias>SSC_NAME</remote-alias>
              <ordinal>18</ordinal>
              <family>sydney.geojson</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>494</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CONF_VALUE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CONF_VALUE]</local-name>
              <parent-name>[sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8]</parent-name>
              <remote-alias>CONF_VALUE</remote-alias>
              <ordinal>19</ordinal>
              <family>sydney.geojson</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SQKM</remote-name>
              <remote-type>5</remote-type>
              <local-name>[SQKM]</local-name>
              <parent-name>[sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8]</parent-name>
              <remote-alias>SQKM</remote-alias>
              <ordinal>20</ordinal>
              <family>sydney.geojson</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>473</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Geometry</remote-name>
              <remote-type>128</remote-type>
              <local-name>[Geometry]</local-name>
              <parent-name>[sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8]</parent-name>
              <remote-alias>Geometry</remote-alias>
              <ordinal>21</ordinal>
              <family>sydney.geojson</family>
              <local-type>spatial</local-type>
              <aggregation>Collect</aggregation>
              <approx-count>472</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:rating_text:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Average&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Very Good&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Poor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Good&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Excellent&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:type:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[&apos;Bakery&apos;, &apos;Pub&apos;]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[&apos;Casual Dining&apos;, &apos;Café&apos;]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[&apos;Fast Food&apos;, &apos;Food Truck&apos;]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[&apos;Bar&apos;]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[&apos;Casual Dining&apos;, &apos;Pub&apos;]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[&apos;Dessert Parlour&apos;, &apos;Bakery&apos;]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[&apos;Pub&apos;, &apos;Bar&apos;]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[&apos;Café&apos;, &apos;Wine Bar&apos;]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[&apos;Casual Dining&apos;]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[&apos;Dessert Parlour&apos;]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[&apos;Casual Dining&apos;, &apos;Bar&apos;]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[&apos;Bar&apos;, &apos;Casual Dining&apos;]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[&apos;Bar&apos;, &apos;Wine Bar&apos;]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[&apos;Fine Dining&apos;]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[&apos;Bakery&apos;]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[&apos;Casual Dining&apos;, &apos;Dessert Parlour&apos;]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[&apos;Food Stall&apos;]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[&apos;Bakery&apos;, &apos;Casual Dining&apos;]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[&apos;Casual Dining&apos;, &apos;Wine Bar&apos;]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[&apos;Fast Food&apos;, &apos;Bar&apos;]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[&apos;Wine Bar&apos;, &apos;Casual Dining&apos;]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[&apos;Café&apos;, &apos;Bar&apos;]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[&apos;Club&apos;, &apos;Pub&apos;]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>%null%</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[&apos;Café&apos;, &apos;Dessert Parlour&apos;]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[&apos;Dessert Parlour&apos;, &apos;Café&apos;]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[&apos;Pub&apos;, &apos;Casual Dining&apos;]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[&apos;Beverage Shop&apos;]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[&apos;Food Court&apos;, &apos;Fast Food&apos;]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[&apos;Food Court&apos;]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[&apos;Bakery&apos;, &apos;Dessert Parlour&apos;]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[&apos;Casual Dining&apos;, &apos;Bakery&apos;]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[&apos;Fast Food&apos;, &apos;Casual Dining&apos;]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[&apos;Wine Bar&apos;]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[&apos;Bar&apos;, &apos;Club&apos;]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[&apos;Casual Dining&apos;, &apos;Food Stall&apos;]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[&apos;Food Court&apos;, &apos;Beverage Shop&apos;]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[&apos;Bar&apos;, &apos;Fine Dining&apos;]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[&apos;Beverage Shop&apos;, &apos;Dessert Parlour&apos;]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[&apos;Food Court&apos;, &apos;Café&apos;]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[&apos;Café&apos;, &apos;Bakery&apos;]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[&apos;Club&apos;, &apos;Casual Dining&apos;]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[&apos;Café&apos;, &apos;Beverage Shop&apos;]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[&apos;Club&apos;]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[&apos;Food Truck&apos;]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[&apos;Café&apos;]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[&apos;Casual Dining&apos;, &apos;Fast Food&apos;]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[&apos;Fine Dining&apos;, &apos;Bar&apos;]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[&apos;Fast Food&apos;]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[&apos;Bakery&apos;, &apos;Food Court&apos;]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[&apos;Club&apos;, &apos;Bar&apos;]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[&apos;Fast Food&apos;, &apos;Food Court&apos;]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[&apos;Café&apos;, &apos;Casual Dining&apos;]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[&apos;Café&apos;, &apos;Fast Food&apos;]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[&apos;Dessert Parlour&apos;, &apos;Fast Food&apos;]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[&apos;Pub&apos;, &apos;Club&apos;]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[&apos;Bar&apos;, &apos;Pub&apos;]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[&apos;Beverage Shop&apos;, &apos;Food Court&apos;]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[&apos;Food Court&apos;, &apos;Casual Dining&apos;]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[&apos;Bar&apos;, &apos;Café&apos;]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[&apos;Casual Dining&apos;, &apos;Food Court&apos;]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[&apos;Fine Dining&apos;, &apos;Wine Bar&apos;]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[&apos;Pub&apos;]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[&apos;Bakery&apos;, &apos;Café&apos;]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[&apos;Café&apos;, &apos;Food Court&apos;]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[&apos;Dessert Parlour&apos;, &apos;Food Court&apos;]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[&apos;Pub&apos;, &apos;Wine Bar&apos;]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:SSC_CODE:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;10027&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;10113&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;10244&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;10419&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;10493&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;10574&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;10699&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;10784&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;10866&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11033&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11136&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11261&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11355&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11440&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11537&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11721&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11807&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11885&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11959&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;12017&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;12149&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;12293&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;12475&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;12602&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;79494&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;10091&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;10180&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;10337&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;10471&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;10526&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;10651&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;10741&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;10829&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;10979&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;11098&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;11210&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;11326&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;11405&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;11500&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;11598&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;11764&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;11851&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;11921&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;11994&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;12086&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;12195&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;12434&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;12551&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;49191&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10016&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10102&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10203&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10399&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10481&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10545&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10691&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10772&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10862&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;11018&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;11124&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;11244&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;11333&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;11426&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;11524&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;11684&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;11775&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;11864&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;11932&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;12001&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;12116&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;12237&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;12445&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;12567&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;59797&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;10058&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;10139&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;10279&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;10445&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;10513&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;10586&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;10710&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;10793&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;10917&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11058&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11145&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11273&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11363&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11464&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11547&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11740&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11827&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11896&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11968&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;12029&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;12165&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;12369&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;12486&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;19191&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;89797&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10039&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10114&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10275&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10421&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10501&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10575&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10700&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10785&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10898&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;11038&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;11139&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;11262&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;11357&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;11445&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;11539&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;11724&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;11809&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;11886&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;11962&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;12018&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;12151&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;12329&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;12476&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;12615&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;79797&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;10022&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;10103&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;10225&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;10409&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;10486&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;10555&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;10693&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;10775&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;10863&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;11019&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;11125&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;11245&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;11336&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;11434&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;11525&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;11691&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;11794&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;11866&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;11941&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;12012&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;12117&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;12240&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;12458&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;12574&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;69191&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;10085&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;10167&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;10309&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;10469&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;10523&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;10649&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;10729&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;10825&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;10962&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;11092&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;11167&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;11303&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;11390&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;11491&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;11590&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;11759&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;11844&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;11916&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;11989&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;12064&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;12193&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;12423&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;12535&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;39494&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10001&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10099&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10199&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10350&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10472&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10537&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10667&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10745&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10833&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;10998&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;11112&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;11220&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;11329&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;11406&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;11502&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;11603&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;11770&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;11858&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;11923&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;11997&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;12097&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;12206&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;12436&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;12561&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;49494&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;10070&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;10154&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;10303&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;10452&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;10518&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;10642&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;10722&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;10806&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;10951&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;11081&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;11155&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;11300&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;11378&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;11477&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;11578&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;11755&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;11838&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;11909&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;11987&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;12056&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;12191&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;12383&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;12525&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;29494&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;10023&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;10110&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;10227&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;10410&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;10488&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;10558&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;10696&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;10777&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;10864&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11022&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11126&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11257&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11342&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11436&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11533&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11693&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11798&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11869&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11942&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;12014&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;12146&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;12266&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;12459&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;12575&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;69494&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;10059&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;10140&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;10281&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;10446&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;10514&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;10587&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;10711&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;10794&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;10918&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;11059&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;11147&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;11274&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;11367&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;11472&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;11553&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;11743&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;11829&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;11904&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;11976&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;12039&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;12173&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;12372&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;12501&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;19494&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;99494&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;10062&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;10146&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;10282&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;10447&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;10516&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;10637&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;10717&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;10797&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;10930&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;11070&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;11148&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;11294&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;11369&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;11475&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;11554&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;11745&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;11830&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;11905&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;11977&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;12043&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;12182&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;12376&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;12505&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;19797&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;99797&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;10084&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;10162&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;10304&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;10456&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;10519&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;10643&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;10726&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;10824&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;10953&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;11089&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;11157&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;11301&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;11384&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;11487&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;11589&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;11757&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;11841&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;11913&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;11988&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;12062&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;12192&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;12414&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;12531&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;29797&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;10090&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;10169&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;10329&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;10470&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;10524&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;10650&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;10734&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;10827&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;10964&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;11095&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;11201&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;11322&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;11397&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;11495&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;11597&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;11763&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;11850&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;11918&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;11991&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;12079&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;12194&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;12431&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;12546&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;39797&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;10054&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;10129&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;10276&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;10422&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;10502&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;10576&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;10706&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;10786&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;10904&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11039&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11141&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11269&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11360&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11458&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11543&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11733&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11822&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11889&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11966&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;12022&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;12155&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;12330&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;12477&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;12624&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;89191&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;10025&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;10112&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;10240&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;10411&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;10490&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;10571&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;10698&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;10780&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;10865&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11027&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11129&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11258&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11351&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11437&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11535&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11708&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11799&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11874&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11944&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;12016&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;12148&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;12273&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;12472&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;12591&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;69797&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;10002&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;10100&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;10200&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;10355&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;10475&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;10540&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;10675&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;10746&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;10836&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;11008&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;11116&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;11229&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;11330&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;11421&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;11508&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;11622&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;11773&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;11859&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;11925&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;11998&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;12101&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;12221&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;12440&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;12563&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;49797&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;10063&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;10151&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;10302&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;10451&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;10517&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;10638&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;10718&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;10804&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;10950&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;11078&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;11149&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;11295&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;11376&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;11476&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;11555&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;11751&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;11831&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;11907&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;11983&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;12044&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;12184&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;12380&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;12506&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;29191&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10055&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10135&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10277&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10443&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10504&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10585&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10709&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10787&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10906&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11057&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11144&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11270&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11362&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11459&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11545&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11737&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11826&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11895&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11967&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;12023&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;12164&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;12343&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;12484&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;12626&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;89494&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10010&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10101&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10202&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10382&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10480&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10542&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10690&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10763&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10856&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;11013&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;11123&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;11231&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;11331&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;11425&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;11511&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;11626&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;11774&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;11860&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;11931&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;12000&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;12105&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;12234&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;12444&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;12565&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;59494&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='sydney.geojson' id='sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8'>
            <properties context=''>
              <relation connection='ogrdirect.14ksxaw1u3phfj14tofdl0j2opaf' name='sydney.geojson' table='[sydney.geojson]' type='table'>
                <columns>
                  <column datatype='string' name='SSC_CODE' ordinal='0' />
                  <column datatype='string' name='SSC_NAME' ordinal='1' />
                  <column datatype='string' name='CONF_VALUE' ordinal='2' />
                  <column datatype='real' name='SQKM' ordinal='3' />
                  <column datatype='spatial' name='Geometry' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8' table='[Extract].[sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8]' type='table' />
            </properties>
          </object>
          <object caption='zomato_df_final_data.csv' id='zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9'>
            <properties context=''>
              <relation connection='textscan.033nblt0a0rydv1f8nejj00cu07h' name='zomato_df_final_data.csv' table='[zomato_df_final_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
                  <column datatype='string' name='address' ordinal='0' />
                  <column datatype='integer' name='cost' ordinal='1' />
                  <column datatype='string' name='cuisine' ordinal='2' />
                  <column datatype='real' name='lat' ordinal='3' />
                  <column datatype='string' name='link' ordinal='4' />
                  <column datatype='real' name='lng' ordinal='5' />
                  <column datatype='string' name='phone' ordinal='6' />
                  <column datatype='real' name='rating_number' ordinal='7' />
                  <column datatype='string' name='rating_text' ordinal='8' />
                  <column datatype='string' name='subzone' ordinal='9' />
                  <column datatype='string' name='title' ordinal='10' />
                  <column datatype='string' name='type' ordinal='11' />
                  <column datatype='integer' name='votes' ordinal='12' />
                  <column datatype='boolean' name='groupon' ordinal='13' />
                  <column datatype='string' name='color' ordinal='14' />
                  <column datatype='real' name='cost_2' ordinal='15' />
                  <column datatype='string' name='cuisine_color' ordinal='16' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9' table='[Extract].[zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[subzone]' />
              <expression op='[SSC_NAME]' />
            </expression>
            <first-end-point object-id='zomato_df_final_data.csv_C969E555CB9B436E88FCC0C7EB43D4C9' />
            <second-end-point object-id='sydney.geojson_C011F47E18354B54AC6167D49CF1DFC8' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_4C79AECE73FD42FBA2BB22B0079AD608]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Eating Out Dashboard' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Type' />
        <param name='target' value='Eating Out Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Avg Cost vs Rating'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='11' underline='true'>Avgerage Cost vs Rating </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato_df_final_data' name='federated.1c5p8bv0zwov901gcb7ql0gc1sax' />
          </datasources>
          <datasource-dependencies datasource='federated.1c5p8bv0zwov901gcb7ql0gc1sax'>
            <column-instance column='[cost]' derivation='Avg' name='[avg:cost:vtnone:qk]' pivot='key' type='quantitative' visual-totals='None' />
            <column aggregation='Avg' caption='Cost' datatype='integer' name='[cost]' role='measure' type='quantitative' visual-totals='None' />
            <column-instance column='[rating_number]' derivation='None' name='[none:rating_number:ok]' pivot='key' type='ordinal' />
            <column-instance column='[rating_text]' derivation='None' name='[none:rating_text:nk]' pivot='key' type='nominal' />
            <column caption='Rating Number' datatype='real' name='[rating_number]' role='dimension' type='ordinal' />
            <column caption='Rating Text' datatype='string' name='[rating_text]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_number:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:rating_number:ok]' />
              <groupfilter function='member' level='[none:rating_number:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_number:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <lod column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_text:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#6d78a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[avg:cost:vtnone:qk]</rows>
        <cols>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_number:ok]</cols>
      </table>
      <simple-id uuid='{C52B64AD-04B5-4B6C-A60B-7B3DD001B05B}' />
    </worksheet>
    <worksheet name='Avg Cost vs Rating Text'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10' underline='true'>Average Cost vs Rating Text</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato_df_final_data' name='federated.1c5p8bv0zwov901gcb7ql0gc1sax' />
          </datasources>
          <datasource-dependencies datasource='federated.1c5p8bv0zwov901gcb7ql0gc1sax'>
            <column-instance column='[cost]' derivation='Avg' name='[avg:cost:vtnone:qk]' pivot='key' type='quantitative' visual-totals='None' />
            <column aggregation='Avg' caption='Cost' datatype='integer' name='[cost]' role='measure' type='quantitative' visual-totals='None' />
            <column-instance column='[rating_text]' derivation='None' name='[none:rating_text:nk]' pivot='key' type='nominal' />
            <column caption='Rating Text' datatype='string' name='[rating_text]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_text:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:rating_text:nk]' />
              <groupfilter function='member' level='[none:rating_text:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_text:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Poor&quot;</bucket>
              <bucket>&quot;Average&quot;</bucket>
              <bucket>&quot;Good&quot;</bucket>
              <bucket>&quot;Very Good&quot;</bucket>
              <bucket>&quot;Excellent&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_text:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[avg:cost:vtnone:qk]' field-type='quantitative' max='117.80010023585751' min='-0.81101653107211957' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f17b79' />
                <format attr='size' value='1.9120441675186157' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[avg:cost:vtnone:qk]</rows>
        <cols>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_text:nk]</cols>
      </table>
      <simple-id uuid='{7D9F5735-9A36-4580-9C95-6B21E8CD882D}' />
    </worksheet>
    <worksheet name='Cost Frequency'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10' underline='true'>Cost Frequency</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato_df_final_data' name='federated.1c5p8bv0zwov901gcb7ql0gc1sax' />
          </datasources>
          <datasource-dependencies datasource='federated.1c5p8bv0zwov901gcb7ql0gc1sax'>
            <column aggregation='None' datatype='integer' name='[Cost (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='1' formula='[cost]' peg='0' size='32.2' />
            </column>
            <column-instance column='[cost]' derivation='Count' name='[cnt:cost:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Cost' datatype='integer' name='[cost]' role='measure' type='quantitative' visual-totals='None' />
            <column-instance column='[Cost (bin)]' derivation='None' name='[none:Cost (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Cost (bin)]' derivation='None' name='[none:Cost (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[cost]' derivation='Sum' name='[sum:cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:Cost (bin):ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Cost (bin):ok]' />
              <groupfilter from='6' function='range' level='[none:Cost (bin):ok]' to='15' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:Cost (bin):qk]' included-values='non-null' />
          <slices>
            <column>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:Cost (bin):qk]</column>
            <column>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:Cost (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:Cost (bin):qk]' value='57' />
            <format attr='title' class='0' field='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[cnt:cost:qk]' scope='rows' value='Cost Frequency' />
            <format attr='width' field='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[cnt:cost:qk]' value='68' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <lod column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[sum:cost:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#76b7b2' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='264' />
                <format attr='maxwidth' value='264' />
                <format attr='minheight' value='113' />
                <format attr='maxheight' value='113' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[cnt:cost:qk]</rows>
        <cols>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:Cost (bin):qk]</cols>
        <show-full-range>
          <column>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[Cost (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{4C08D999-BAEF-4B9F-884D-3BAFAE9DA14B}' />
    </worksheet>
    <worksheet name='Cost Range (Top 10 Suburbs)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10' underline='true'>Cost range (Top 10 popular suburbs)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato_df_final_data' name='federated.1c5p8bv0zwov901gcb7ql0gc1sax' />
          </datasources>
          <datasource-dependencies datasource='federated.1c5p8bv0zwov901gcb7ql0gc1sax'>
            <column-instance column='[cost]' derivation='Avg' name='[avg:cost:vtnone:qk]' pivot='key' type='quantitative' visual-totals='None' />
            <column aggregation='Avg' caption='Cost' datatype='integer' name='[cost]' role='measure' type='quantitative' visual-totals='None' />
            <column-instance column='[subzone]' derivation='None' name='[none:subzone:nk]' pivot='key' type='nominal' />
            <column caption='Subzone' datatype='string' name='[subzone]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:subzone:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:subzone:nk]' member='&quot;Blacktown&quot;' />
              <groupfilter function='member' level='[none:subzone:nk]' member='&quot;Bondi Beach&quot;' />
              <groupfilter function='member' level='[none:subzone:nk]' member='&quot;CBD&quot;' />
              <groupfilter function='member' level='[none:subzone:nk]' member='&quot;Chinatown&quot;' />
              <groupfilter function='member' level='[none:subzone:nk]' member='&quot;Darlinghurst&quot;' />
              <groupfilter function='member' level='[none:subzone:nk]' member='&quot;Manly&quot;' />
              <groupfilter function='member' level='[none:subzone:nk]' member='&quot;Newtown&quot;' />
              <groupfilter function='member' level='[none:subzone:nk]' member='&quot;Parramatta&quot;' />
              <groupfilter function='member' level='[none:subzone:nk]' member='&quot;Potts Point&quot;' />
              <groupfilter function='member' level='[none:subzone:nk]' member='&quot;Surry Hills&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:subzone:nk]' direction='DESC' using='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[avg:cost:vtnone:qk]' />
          <slices>
            <column>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:subzone:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='refboxplot'>
            <format attr='palette' id='refline0' value='bp_red' />
            <format attr='stroke-size' id='refline0' value='4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <reference-line axis-column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[avg:cost:vtnone:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[avg:cost:vtnone:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[avg:cost:vtnone:qk]</rows>
        <cols>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:subzone:nk]</cols>
      </table>
      <simple-id uuid='{CFF03B5D-F741-4E95-ACDE-7C0A4BE9B322}' />
    </worksheet>
    <worksheet name='Count (Restaurant Type)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10' underline='true'>Count (Restaurant Type)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato_df_final_data' name='federated.1c5p8bv0zwov901gcb7ql0gc1sax' />
          </datasources>
          <datasource-dependencies datasource='federated.1c5p8bv0zwov901gcb7ql0gc1sax'>
            <column-instance column='[type]' derivation='Count' name='[cnt:type:qk]' pivot='key' type='quantitative' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:type:nk]' />
              <groupfilter function='except'>
                <groupfilter function='level-members' level='[none:type:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:type:nk]' member='&quot;[&apos;Bar&apos;]&quot;' />
                  <groupfilter function='member' level='[none:type:nk]' member='&quot;[&apos;Café&apos;]&quot;' />
                  <groupfilter function='member' level='[none:type:nk]' member='&quot;[&apos;Casual Dining&apos;]&quot;' />
                  <groupfilter function='member' level='[none:type:nk]' member='&quot;[&apos;Fast Food&apos;]&quot;' />
                  <groupfilter function='member' level='[none:type:nk]' member='&quot;[&apos;Food Court&apos;]&quot;' />
                  <groupfilter function='member' level='[none:type:nk]' member='&quot;[&apos;Pub&apos;]&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:type:nk]' direction='DESC' using='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[cnt:type:qk]' />
          <slices>
            <column>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:type:nk]' value='Type'>
              <formatted-text>
                <run>Type</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <wedge-size column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[cnt:type:qk]' />
              <text column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[cnt:type:qk]' />
              <color column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B560B69B-8028-4757-8CA0-E544187AD171}' />
    </worksheet>
    <worksheet name='Restaurant vs Location Frequency'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='11' underline='true'>Restaurant vs Location Frequency</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato_df_final_data' name='federated.1c5p8bv0zwov901gcb7ql0gc1sax' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1c5p8bv0zwov901gcb7ql0gc1sax'>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column caption='Ssc Code' datatype='string' name='[SSC_CODE]' role='dimension' type='nominal' />
            <column caption='Ssc Name' datatype='string' name='[SSC_NAME]' role='dimension' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='Count' name='[cnt:title:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SSC_CODE]' derivation='None' name='[none:SSC_CODE:nk]' pivot='key' type='nominal' />
            <column-instance column='[SSC_NAME]' derivation='None' name='[none:SSC_NAME:nk]' pivot='key' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[Longitude (generated)]' field-type='quantitative' max='16866401.011438221' min='16770731.634492559' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[Latitude (generated)]' field-type='quantitative' max='-3982071.6549403248' min='-4047222.0667151171' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[clct:Geometry:nk]' />
              <lod column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[cnt:title:qk]' />
              <text column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:SSC_NAME:nk]' />
              <color column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:SSC_CODE:nk]' />
              <geometry column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[clct:Geometry:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[Latitude (generated)]</rows>
        <cols>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{0110E29E-8246-46AB-986E-68157A40AC82}' />
    </worksheet>
    <worksheet name='Vote Frequency (Rating type)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10' underline='true'>Vote Frequency for each rating type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato_df_final_data' name='federated.1c5p8bv0zwov901gcb7ql0gc1sax' />
          </datasources>
          <datasource-dependencies datasource='federated.1c5p8bv0zwov901gcb7ql0gc1sax'>
            <column-instance column='[title]' derivation='Count' name='[cnt:title:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating_text]' derivation='None' name='[none:rating_text:nk]' pivot='key' type='nominal' />
            <column caption='Rating Text' datatype='string' name='[rating_text]' role='dimension' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_text:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:rating_text:nk]' />
              <groupfilter function='member' level='[none:rating_text:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_text:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[cnt:title:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_text:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[cnt:title:qk]' scope='rows' value='Frequency ' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#b07aa1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[cnt:title:qk]</rows>
        <cols>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_text:nk]</cols>
      </table>
      <simple-id uuid='{A852A213-9C4E-4622-B827-646BC3E1C445}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Eating Out Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#aa5500' fontname='Tableau Bold' fontsize='24'>Eating Out Problem - Sydney Restaurants</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='27' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97872' id='32' param='vert' type-v2='layout-flow' w='98840' x='580' y='1064'>
            <zone fixed-size='65' h='9708' id='33' is-fixed='true' type-v2='title' w='98840' x='580' y='1064'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='88164' id='30' param='vert' type-v2='layout-flow' w='98840' x='580' y='10772'>
              <zone fixed-size='861' h='88164' id='28' is-fixed='true' type-v2='layout-basic' w='98840' x='580' y='10772'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7789' id='4' is-scaled='1' param='C:/Users/tejas/Downloads/DSTS/Assignment1/data/data/EatingOutDashboard.twb Files/Users/nish/Desktop/UCLOGO.png' type-v2='bitmap' w='6583' x='30917' y='2632' />
        <zone h='20947' id='5' name='Count (Restaurant Type)' w='17000' x='1167' y='10105' />
        <zone h='18842' id='7' name='Count (Restaurant Type)' pane-specification-id='0' param='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:type:nk]' type-v2='color' w='14417' x='18417' y='10737' />
        <zone h='36526' id='8' name='Restaurant vs Location Frequency' w='36917' x='58500' y='62000' />
        <zone h='26947' id='9' name='Avg Cost vs Rating' w='46917' x='1333' y='34947' />
        <zone h='13579' id='10' name='Avg Cost vs Rating' pane-specification-id='0' param='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_text:nk]' type-v2='color' w='8833' x='37750' y='41579' />
        <zone h='24421' id='11' name='Cost Frequency' w='24667' x='34250' y='10105' />
        <zone h='34632' id='12' name='Cost Range (Top 10 Suburbs)' w='52667' x='4167' y='63579' />
        <zone h='25133' id='13' name='Avg Cost vs Rating Text' w='46594' x='50145' y='35106'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='22396' id='14' name='Vote Frequency (Rating type)' w='37408' x='60395' y='11198' />
      </zones>
      <devicelayouts>
        <devicelayout name='Desktop' />
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontcolor='#aa5500' fontname='Tableau Bold' fontsize='24'>Eating Out Problem - Sydney Restaurants</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='63' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97872' id='62' param='vert' type-v2='layout-flow' w='98840' x='580' y='1064'>
                <zone fixed-size='65' h='9708' id='33' type-v2='title' w='98840' x='580' y='1064'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='62' h='7789' id='4' is-fixed='true' is-scaled='1' param='C:/Users/tejas/Downloads/DSTS/Assignment1/data/data/EatingOutDashboard.twb Files/Users/nish/Desktop/UCLOGO.png' type-v2='bitmap' w='6583' x='30917' y='2632'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='167' h='20947' id='5' is-fixed='true' name='Count (Restaurant Type)' w='17000' x='1167' y='10105'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18842' id='7' name='Count (Restaurant Type)' pane-specification-id='0' param='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:type:nk]' type-v2='color' w='14417' x='18417' y='10737'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='195' h='24421' id='11' is-fixed='true' name='Cost Frequency' w='24667' x='34250' y='10105'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='179' h='22396' id='14' is-fixed='true' name='Vote Frequency (Rating type)' w='37408' x='60395' y='11198'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='215' h='26947' id='9' is-fixed='true' name='Avg Cost vs Rating' w='46917' x='1333' y='34947'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13579' id='10' name='Avg Cost vs Rating' pane-specification-id='0' param='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_text:nk]' type-v2='color' w='8833' x='37750' y='41579'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='201' h='25133' id='13' is-fixed='true' name='Avg Cost vs Rating Text' w='46594' x='50145' y='35106'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36526' id='8' is-fixed='true' name='Restaurant vs Location Frequency' w='36917' x='58500' y='62000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='277' h='34632' id='12' is-fixed='true' name='Cost Range (Top 10 Suburbs)' w='52667' x='4167' y='63579'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8D2F184A-86C5-4150-A1B9-17B651BC8E74}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='dashboard' name='Eating Out Dashboard'>
      <viewpoints>
        <viewpoint name='Avg Cost vs Rating'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_text:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Avg Cost vs Rating Text'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Cost Frequency'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Cost Range (Top 10 Suburbs)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Count (Restaurant Type)'>
          <zoom type='entire-view' />
          <highlight field='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Restaurant vs Location Frequency'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Vote Frequency (Rating type)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
      <simple-id uuid='{3C727523-FDE9-47D7-97FF-3A5D4950611A}' />
    </window>
    <window class='worksheet' name='Avg Cost vs Rating'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_number:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[avg:cost:vtnone:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[avg:cost:vtnone:qk]</field>
                  <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_number:ok]</field>
                  <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_text:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>46.0</value>
                <value>1.8999999999999999</value>
                <value>&quot;Poor&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:Calculation_3656641438847455239:qk]</field>
            <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:cost:vtnone:qk]</field>
            <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:cuisine:nk]</field>
            <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_number:ok]</field>
            <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_text:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D1B5D07-BF12-4CC9-B144-33D1D3701888}' />
    </window>
    <window class='worksheet' maximized='true' name='Cost Frequency'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_text:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A4E88105-37A4-47E3-A9E7-4615EA55ED95}' />
    </window>
    <window class='worksheet' name='Count (Restaurant Type)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[cnt:type:qk]</field>
            <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D816E06B-A425-4F37-AC4E-44BB4E70771E}' />
    </window>
    <window class='worksheet' name='Restaurant vs Location Frequency'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:SSC_CODE:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:CONF_VALUE:nk]</field>
            <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:SSC_CODE:nk]</field>
            <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:lat:qk]</field>
            <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:lng:ok]</field>
            <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0C74AF41-FC7E-46A2-94DF-6E1368358B81}' />
    </window>
    <window class='worksheet' name='Cost Range (Top 10 Suburbs)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:subzone:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{411A4C21-1C7D-431A-B91B-B43F245D00D7}' />
    </window>
    <window class='worksheet' name='Avg Cost vs Rating Text'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_text:nk]</field>
            <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3F928ADB-1771-4D70-865A-0BA2E3F40108}' />
    </window>
    <window class='worksheet' name='Vote Frequency (Rating type)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:rating_text:nk]</field>
            <field>[federated.1c5p8bv0zwov901gcb7ql0gc1sax].[none:title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{58043AFD-F9C7-40B1-B196-A7CC871A11D8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg Cost vs Rating' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg Cost vs Rating Text' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='174' name='Cost Frequency' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cost Range (Top 10 Suburbs)' width='192'>
      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
      ARPAy7l2+0+nAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='164' name='Count (Restaurant Type)' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='Eating Out Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Restaurant vs Location Frequency' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Vote Frequency (Rating type)' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
